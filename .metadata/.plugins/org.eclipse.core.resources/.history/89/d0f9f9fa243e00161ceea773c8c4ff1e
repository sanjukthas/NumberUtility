import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class CustomerApp {
	public static Connection con = null;

	public static void main(String[] args) throws SQLException {
		
		Statement stmt = null;
		ResultSet rs = null;
		PreparedStatement pstmt = null;
		System.out.println("Enter the customer ID");
		Scanner keyboard = new Scanner(System.in);
		int cus = keyboard.nextInt();
		keyboard.nextLine();
		System.out.println("Press (1) to search for another customer or press (2) to Edit the customer's address");
		// Scanner keyboard1 =new Scanner(System.in);
		int popt = keyboard.nextInt();
		keyboard.nextLine();
		try {
			if (popt == 1) {
				// String sql = " select * from customers where customerid=938";

				Class.forName("oracle.jdbc.driver.OracleDriver");
				// con = DriverManager.getConnection("jdbc:oracle:thin:sys as
				// sysdba/oracle@localhost:1521:orcl");
				con = DriverManager.getConnection("jdbc:oracle:thin:ora1/ora1@localhost:1521:orcl");
				// stmt = con.createStatement();
				pstmt = con.prepareStatement("select * from customers where customerid= ?");
				pstmt.setInt(1, cus);
				// pstmt.setINT

				rs = pstmt.executeQuery();
				while (rs.next()) {
					System.out.println(rs.getString(1) + "\t");
					System.out.println(rs.getString(2));
				}

			}

			else {

				Class.forName("oracle.jdbc.driver.OracleDriver");
				// con = DriverManager.getConnection("jdbc:oracle:thin:sys as
				// sysdba/oracle@localhost:1521:orcl");
				con = DriverManager.getConnection("jdbc:oracle:thin:ora1/ora1@localhost:1521:orcl");
				// stmt = con.createStatement();
				pstmt = con.prepareStatement("Update  customers set streetaddress=? , zipcode=? where customerid= ?");
				pstmt.setInt(3, cus);
				System.out.println(" enter the streetaddress: ");
				pstmt.setString(1, keyboard.nextLine());
				System.out.println(" enter the zipcode: ");
				pstmt.setString(2, keyboard.next());
				int res = pstmt.executeUpdate();
				con.commit();
				pstmt.close();

			}
		}
			catch (SQLException e) {
				e.printStackTrace(); 
			} catch (ClassNotFoundException e) {
				e.printStackTrace();
			} finally {
				try {
					if (rs != null)
						rs.close();
					pstmt.close();
					con.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}

			}

	
	
		try{
			
			System.out.println(" Enter the company which should be inserted");
			pstmt = con.prepareStatement("Insert into Company(company) values (?)");
			insert(pstmt,company());
			pstmt.executeUpdate();
			con.commit();
			//pstmt.close();
			pstmt = con.prepareStatement("Select companyid from companies where company = ?");
			int companyId=select (pstmt, company());
			
			System.out.println(" Enter the city which should be inserted");
			pstmt = con.prepareStatement("Insert into City(city) values (?)");
			insert(pstmt,city());
			pstmt.executeUpdate();
			con.commit();
			//pstmt.close();
			pstmt = con.prepareStatement("Select companyid from cities where city = ?");
			int cityId=select (pstmt, city());
			
			
			System.out.println(" Enter the country which should be inserted");
			pstmt = con.prepareStatement("Insert into Country(country) values (?)");
			insert(pstmt,country());
			pstmt.executeUpdate();
			con.commit();
			//pstmt.close();
			pstmt = con.prepareStatement("Select countryid from countries where country = ?");
			int countryId=select (pstmt, country());
			
			pstmt = con.prepareStatement("Insert into CUSTOMERS values(?,?,?,"
					+ "(select max(CUSTOMERID)+1 from CUSTOMERS))");
			pstmt.setInt(1, companyId);
			pstmt.setInt(2, cityId);
     		pstmt.setInt(3, countryId);

  	      int rs1 = pstmt.executeUpdate();
			con.commit();
		
		
   }

		catch (SQLException e) {
			e.printStackTrace(); 
		} finally {
			try {
				if (rs != null)
					rs.close();
				pstmt.close();
				con.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}

		}

	}
	
	private static int select (PreparedStatement pstmt, String param) throws SQLException {
		
		pstmt.setString(1, param);
		int res = pstmt.executeUpdate();
		pstmt.close();
		con.commit();
		return res;
	}	
		
	private static int insert(PreparedStatement pstmt,String param) throws SQLException {
		pstmt.setString(1, param);
		ResultSet rs = pstmt.executeQuery();
		while (rs.next()) {
			int res = rs.getInt(1);
			pstmt.close();
			return res;
		}
		pstmt.close();
		return -1;		
	}

	private static Object company() {
		// TODO Auto-generated method stub
		return null;
	}

	private static int select(PreparedStatement pstmt, Object company) {
		// TODO Auto-generated method stub
		return 0;
	}

	private static void insert(PreparedStatement pstmt, Object company) {
		
	}

	private static Object country() {
		// TODO Auto-generated method stub
		return null;
	}

	private static Object city() {
		// TODO Auto-generated method stub
		return null;
	}

	

}