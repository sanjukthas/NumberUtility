package DBUtil;

import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;
import javax.persistence.NoResultException;
import javax.persistence.Query;
import javax.persistence.TypedQuery;

import DBUtil.DBUtil;
i

public class UserHelp {

	public static Minionuser getUserByEmail(String email) {
		EntityManager em = DBUtil.getEmFactory().createEntityManager();
		String qString = "Select u from Minionuser u " + "where u.useremail=:useremail";
		TypedQuery<Minionuser> q = em.createQuery(qString, Minionuser.class);
		q.setParameter("useremail", email);
		Minionuser user = null;
		try {
			user = q.getSingleResult();
		} catch (NoResultException e) {
			System.out.println(e);
		} finally {
			em.close();
		}
		return user;
	}
	
	public static Minionuser getUserByName(String name) {
		EntityManager em = DBUtil.getEmFactory().createEntityManager();
		String qString = "Select u from Minionuser u where u.username = :name";
		TypedQuery<Minionuser> q = em.createQuery(qString, Minionuser.class);
		q.setParameter("name", name);
		Minionuser user = null;
		try {
			user = q.getSingleResult();
		} catch (NoResultException e) {
			System.out.println(e);
		} finally {
			em.close();
		}
		return user;
	}

	public static boolean isValidUser(String name, String pass) throws NoSuchAlgorithmException {
		boolean result = false;
		EntityManager em = DBUtil.getEmFactory().createEntityManager();
		String qString = "Select b from Minionuser b where b.username = :name";
		try {
			TypedQuery<Minionuser> q = em.createQuery(qString, Minionuser.class);

			q.setParameter("name", name);
			Minionuser user = q.getSingleResult();
			String hashCode = PasswordUtil.hashPasswordPlusSalt(pass, user.getPwdsecure());
		
			if (user.getPwd().equals(hashCode)) {
				result = true;
			}
		} catch (Exception e) {
			result = false;
		} finally {
			em.close();
		}
		return result;
	}
}